깃크라켄, repl.it, stajun.tistory.com(jdk,jre), 이클립스(오라클)
1. 변수
  1)하나의 값을 저장하는 메모리 공간
  2)변하는 수

2. 변수 타입(자료형) : 변수를 크게 분류
  1)논리형 : boolean(1byte)
  2)문자형 : char(2byte)
  3)정수형 : byte(1byte), short(2byte), int(4byte), long(8byte)
  4)실수형 : float(4byte), double(8byte) 

3. 변수 선언
  1)변수 타입 + 변수명 ; 
    ex) 정수형 변수 number를 선언하세요. => int number;
  2)변수 타입 + 변수명 = 초기값 ;
    ex) 정수형 변수 number에 초기값 10을 저장하여 선언하세요. => int number = 10;
    ex) 실수형 변수 score에 초기값 90.5를 저장하여 선언하세요. => double score = 90.5; or float score = 90.5f;
    ex) 문자형 변수 ch에 초기값 A를 저장하여 선언하세요. => char ch = 'A';
  3)문자는 ' '안에 있는 단일문자
    ex)'1' : 문자 1 ex)'12' : 성립안됌
  4)문자열은 " "안에 있는 문자열
    ex)"1" : 문자열 1 ex)"12" : 문자열 12
    ex) 논리형 변수 isEven의 초기값을 참으로 저장하여 선언하세요. => boolean isEven = true;
    ex) 정수형 x와 y를 선언하세요. => int x; or int x , y;  int x = 1; or int x=1, y=2;
			       int y;	      int y = 2;
4. 변수 이름 짓는 규칙
  1)대소문자 구분, 길이제한 없음
    ex) int A, a; : A와 a는 다른 변수
  2)예약어를 사용할 수 없다. (미리 역할이 지정되어 있는 단어)
    일반적으로 글자 색이 다르다.
    ex) int int, class, public; : 성립 안됌
  3)숫자로 시작할 수 없다.
    ex) int num1; : 변수 이름 num1, int 1num; : 성립 안됌
  4)특수문자는 _와 $만 가능
    ex) int $num; int _num; int @num; : 성립 안됌
  5)변수명은 중복선언 할 수 없다.
    ex) int num;
        char num; 성립 안됌
  -변수명 작성 관례 : 이대로 안지켜도 에러는 나지 않음, 일반적으로 대부분의 개발자들이 이렇게 작성을 한다.
    1)클래스는 대문자로 시작하고, 변수명은 소문자로 시작
    2)여러 단어로 이루어진 경우 두번째 단어부터 첫글자를 대문자로 한다. (카멜표기법)
      ex) isEven
    3)상수의 이름은 모두 대문자로 하고, 여러단어로 이루어진 경우 '_'로 구분한다.
    4)변수의 이름은 의미있게 작성한다.
      ex) 사과의 갯수 => int appleCount;

5. 상수
  1)바꿀 수 없는 수
    ex)1, 'a'
  2)리터럴 : 의미가 있는 상수
    ex) final int MAX = 10; : MAX를 상수, 10은 리터럴이다.

6. 접미사
  ex) long num = 21474836470L; : 기본 값인 int보다 높은 값을 요구할 경우 수 끝에 L을 붙여 long선언을 한다.
  ex) float num1 = 1.23f; : 기본 값인 double보다 작은 값을 요구할 경우 수 끝에 f를 붙여 float선언을 한다.
	          (float)1.23;

7. 10진수가 아닌 정수의 값을 저장하는 방법
  ex) int num1 = 10; : 10진수 10
  ex) int num2 = 010; : 8진수 10. 10진수 8
  ex) int num3 = 0x10; : 16진수 10, 10진수 16
  ex) int num4 = 0b10; : 2진수 10, 10진수 2

8. 표준 입출력
  1)표준입력 : Scanner
  2)표준출력
    -print() : 원하는 문자열을 출력하는 메소드로 문자열이 꼭 필요하다.
    -println() : 원하는 문자열을 출력 후 줄바꿈하는 메소드로 문자열이 없어도 가능하다.
    -printf() : 정형화된 문자열을 출력하는 메소드로 문자열이 꼭 필요하다.
  	    =>문자열의 형태를 지정가능 ex)소수점 몇째자리까지 출력할 것인지 지정
	    printf("%d,%d\n",10,20);
	            지시자  와  상수의 갯수는 동일해야 한다.

9. 진법
  1)진수(2진수, 8진수, 10진수, 16진수)
  2)2의 보수 => 음수
  3)정수 표현범위
  4)오버플로우, 언더플로우

10. 자료형변환
  1)자료형을 일시적으로 변환시키는 것
    ex) int형 변수 num의 자료형을 일시적으로 double로 변환시키거가 double형 변수 dnum의 자료형을 int로 변환시키는 것
  2)명시적 자료형 변환 : 자료형변환을 생략할 수 없는 경우(에러 발생)
  		     의도적으로 해당 자료형이 필요한 경우(나누기에 다시 설명)
  3)자동 자료형 변환 : 에러가 발생하지 않는 경우
    ex) 정수 -> 실수
         float -> double
         byte -> short(char) -> int -> long
  4)자료형을 바꾸고 싶은 상수나 변수 앞에(바꾸려는 상수)넣는다.