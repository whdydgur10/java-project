상속
 -부모 클래스의 멤버변수나 메소드를 자식클래스가 물려 받는 것
 -부모의 멤버 변수나 메소드의 접근제한자가 private은 자식 클래스가 사용할 수 없다. getter/setter
 -상속에서 부모클래스는 하나만 가능하다.
 -A는 B이다. A는 자식 B는 부모
 -자식 클래스의 생성자에서 부모 클래스의 생성자를 super()를 통해 호출할 수 있다.
 -필수적인 것은 아니지만 코드의 재사용성으로 효율적으로 하기 위함이다.
 -자식 클래스의 생성자에서는 부모 클래스의 생성자를 사용하지 않으면 자동으로 super()로 부모의 기본 생성자가 호출된다.
 -static메소드는 다형성이 적용되지 않아 어노테이션(@Override)을 적을 수는 없지만 메소드는 작성이 가능한데
  이를 하이딩이라고 한다. 
  실행 가능한 프로그램이 만들어지는 컴파일 과정에 static변수 메소드가 만들어지는데 오버라이딩은 동작되어지는 런타임때
  사용할 메소드를 결정한다. 그래서 컴파일과정인 static에 런타임과정인 override는 성립이 안되는 것이다.
  -생성(컴파일 = static) 이전에 실행(런타임 = override)할 순 없다.

클래스
 -클래스의 생성자가 하나도 없다면 클래스가 메모리에 올라갈 때 기본 생성자가 추가된다.

 도형  : 부모
   원   : 자식
삼각형 : 자식
사각형 : 자식

final
 -변수 => 상수
 -메소드 =>오버라이딩이 안됌
 -클래스 => 부모클래스가 안됌
 -final 멤버 변수는 명시적 초기화나 생성자에서 초기화를 해야한다.

 오버로딩 : 메소드 변수 이름만 가져온다
 오버라이딩 : 메소드 변수 통째로 가져온다

재귀메소드
 -메소드 안에서 자신을 호출하는 형태의 메소드
 -탈출 조건을 만들어야한다.
 -사용하기 전 반복문을 이용해보고 재귀와 반복문 중 효율적인 것으로 사용한다.
 -상속에서 실수 할 수 있다.

